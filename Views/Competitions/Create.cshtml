@model GlsLeague.ViewModel.CompetitionEventsVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>



@using (Html.BeginForm()) 
{
   
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Competition</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Competition.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competition.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competition.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competition.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competition.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competition.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competition.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competition.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competition.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competition.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competition.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competition.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competition.IsCompetitionActvie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Competition.IsCompetitionActvie)
                    @Html.ValidationMessageFor(model => model.Competition.IsCompetitionActvie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Competition.IsRegistrationOpen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Competition.IsRegistrationOpen)
                    @Html.ValidationMessageFor(model => model.Competition.IsRegistrationOpen, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        
       

        @foreach (var item in Model.EventsList)
            {
                <div class="checkbox">
                    <label>
                        <input type="checkbox"
                               name="SelectedEventsList"
                               value="@item.ID" /> @item.Name
                        </label>
                    </div>
            }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


        
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
