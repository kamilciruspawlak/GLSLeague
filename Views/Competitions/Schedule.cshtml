@model GlsLeague.ViewModel.CompetitionEventDetailsVM
@{
    ViewBag.Title = "Schedule";
}

<h2>Details</h2>

@using (Html.BeginForm())
{

   @Html.AntiForgeryToken()
   @Html.HiddenFor(model => model.Competition.ID)
    <div>
    
        <table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.EndTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.EventID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.Round)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.CutOffDetails)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.TimeLimit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.HowManyProced)
        </th>
       
    </tr>

    
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <tr>
        <td>
            @Html.DropDownListFor(Model => Model.CompetitionEventDetails.StartTime,
            Enumerable.Range(00, 24).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }),
            "Od")
        </td>
        <td>
            @Html.DropDownListFor(Model => Model.CompetitionEventDetails.EndTime,
            Enumerable.Range(00, 24).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }),
            "Do")
       </td>
        <td>
            @Html.DropDownListFor(Model =>Model.CompetitionEventDetails.EventID, new SelectList(Model.EventsList, "Id", "Name"),"Wybierzkonkurencej", new { @class="form-control" })
            @Html.ValidationMessageFor(model => model.CompetitionEventDetails.EventID, "", new { @class = "text-danger" })
        </td>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.Round)
        </th>
        <td>
            @Html.EditorFor(model => model.CompetitionEventDetails.CutOffDetails, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompetitionEventDetails.CutOffDetails, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(model => model.CompetitionEventDetails.TimeLimit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompetitionEventDetails.TimeLimit, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(model => model.CompetitionEventDetails.HowManyProced, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompetitionEventDetails.HowManyProced, "", new { @class = "text-danger" })
        </td>
         <td>
             <input type="submit" value="Schedule" class="btn btn-default" />
         </td>
    </tr>
</table>
</div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.EndTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.EventID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.Round)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.CutOffDetails)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.TimeLimit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompetitionEventDetails.HowManyProced)
        </th>
       
    </tr>
    @foreach (var item in Model.CompetitionEventDetailsList)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EventID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Round)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CutOffDetails)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeLimit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HowManyProced)
        </td>
        <td>
            @Html.ActionLink("Usuń", "DeleteFromSchedule", new { id=item.ID })
        </td>
    </tr>
    }
    </table>


<p>
   @Html.ActionLink("Back to List", "Index")
</p>
